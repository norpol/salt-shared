[app:bookie]
use = egg:bookie
pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.debug_templates = false
pyramid.default_locale_name = en
pyramid.includes = pyramid_debugtoolbar
                   pyramid_tm

mako.directories = bookie:templates
sqlalchemy.url = sqlite:///bookie.db

auth.secret=PLEASECHANGEME

email.enable=true
email.from=rharding@mitechie.com
email.host=sendmail

fulltext.engine=whoosh
fulltext.index=bookie_index

# what is the host that's providing the YUI combo loader?
combo_server=http://127.0.0.1:8000
# Set this to help bust the cache. It will add a prefix to the combo url you
# can url-rewrite out on the server side. Left empty for development use.
# This should start with a / so that you get sevver/cacheid/combo as the
# generated url.
combo_cache_id=

# pull path to file to include on each page that includes things such as
# google analytics code, css overrides, etc.
installspecific =

celery_result_backend=database
celery_result_dburi=sqla+sqlite:///bookie.db
celery_broker_transport=sqlalchemy
celery_broker_host=sqla+sqlite:///bookie.db
celery_broker_url=sqla+sqlite:///bookie.db
celery_concurrency=1

# Where are we going to upload import files while we wait to process them
import_files={here}/data/imports
rrd_data={here}/data/rrd
rrd_graphs={here}/bookie/static/rrd


[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 6543

[pipeline:main]
pipeline = bookie
#pipeline = raven
#           bookie

# Begin logging configuration

[loggers]
keys = root, bookie, sqlalchemy
# keys = root, bookie, sqlalchemy, sentry

[handlers]
keys = console
#keys = console, sentry

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console

[logger_bookie]
level = WARN
handlers =
qualname = bookie

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[logger_sentry]
level = WARN
handlers = console
qualname = sentry.errors
propagate = 0

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_sentry]
class = raven.handlers.logging.SentryHandler
args = ('url_to_sentry',)
level = WARNING
formatter = generic


[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
