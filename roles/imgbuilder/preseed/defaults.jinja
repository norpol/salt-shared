{% load_yaml as defaults %}

{% set architecture= "amd64" %}
{% set suite= "trusty" %}
{% from "roles/imgbuilder/defaults.jinja" import settings as s with context %}

suite: {{ suite }}
architecture: {{ architecture }}

source: http://archive.ubuntu.com/ubuntu/dists/{{ suite }}/main/installer-{{ architecture }}/20101020ubuntu318/images/netboot/netboot.tar.gz
source_hash: "sha256=bb75b36a603d915a5d35632f6be89063d4a4b9deef4d04f16d48b38509f801f2"
initrd: ubuntu-installer/{{ architecture }}/initrd.gz
kernel: ubuntu-installer/{{ architecture }}/linux

cmdline: 'DEBCONF_DEBUG=1 ro hostname={{ suite }} fb=false auto=true priority=critical debconf/frontend=noninteractive'

templates: 'salt://roles/imgbuilder/preseed/preseed'
hooks: 'salt://roles/imgbuilder/preseed/hooks'
target: '{{ s.image_base }}/templates/imgbuilder/preseed'

disks: /dev/vda
diskpassword_creation: 'pwgen -s 22 1'
diskpassword_receiver_id: insecure_gpgkey
diskpassword_receiver_key: salt://roles/imgbuilder/preseed/files/insecure_gpgkey.key.asc

username: vagrant
hostname: {{ suite }}-default
domainname: me.local
password: {{ salt['cmd.run']('pwgen -s 13 1') }}
netcfg:
  ip: ''
  netmask: ''
  gateway: ''
  dns: ''
  pointopoint: ''

additional_udeb:
  # -

additional_layers:
  - "salt://roles/imgbuilder/preseed/files/overlay.tar.gz"

{% from "roles/apt-cacher-ng/lib.sls" import proxy_address with context %}
{% if proxy_address != false %}
apt_proxy_mirror: {{ proxy_address }}
{% else %}
apt_proxy_mirror: "''"
{% endif %}

custom_files: {}
  {# - "destination": "source" #}

default_preseed: preseed-custom.cfg

preseed_list:
{% set p_default=('base.cfg',
    'user.cfg', 'locale.cfg', 'package-setup.cfg', 'network.cfg',
    'tasks_minimal.cfg', 'apt-mirror.cfg', 'partman-base.cfg') %}

{% for a in ('', '-http') %}
  - preseed-custom{{ a }}.cfg:
  {% for p in p_default %}
    - {{ p }}
  {% endfor %}
    - custom_early{{ a }}.cfg
    - custom_late{{ a }}.cfg
  - preseed-custom{{ a }}-console.cfg:
  {% for p in p_default %}
    - {{ p }}
  {% endfor %}
    - custom_early{{ a }}.cfg
    - custom_late{{ a }}.cfg
    - network-console.cfg
  {% for b in ('plain', 'simple', 'lvm') %}
  - preseed-{{ b }}{{ a }}.cfg:
    {% for p in p_default %}
    - {{ p }}
    {% endfor %}
    - custom_early{{ a }}.cfg
    - custom_late{{ a }}.cfg
    - partman-{{ b }}.cfg
  {% endfor %}
{% endfor %}

{% endload %}
