#!/bin/sh

. /usr/share/debconf/confmodule

logger -t custom_late.sh "modify and update initramfs cryptroot script to make ssh unlock working again"

if test -f /tmp/custom.env; then
    logger -t custom_late.sh "read /tmp/custom.env into environment"
  . /tmp/custom.env
fi

mkdir -p /target/etc/initramfs-tools/hooks

cat > /target/etc/initramfs-tools/hooks/cryptroot_patch << "ENDOFFILE"
#!/bin/sh -e

PREREQS="cryptroot"

prereqs() { echo "$PREREQS"; }

case "$1" in
    prereqs)
    prereqs
    exit 0
    ;;
esac

. /usr/share/initramfs-tools/hook-functions

patch $DESTDIR/scripts/local-top/cryptroot << "EOF"
--- old-local-top/cryptroot	2014-09-17 23:49:36.836097471 +0200
+++ local-top/cryptroot	2014-09-17 23:46:12.072081752 +0200
@@ -247,20 +247,25 @@
 			/bin/sleep 3
 		fi
 
+		cryptkeyaskpass="Unlocking the disk $cryptsource ($crypttarget)\nEnter passphrase: "
 		if [ -z "$cryptkeyscript" ]; then
-			cryptkey="Unlocking the disk $cryptsource ($crypttarget)\nEnter passphrase: "
+			cryptkey="$(printf "$cryptkeyaskpass")"
+			cryptkeyaskpass=""
 			if [ -x /bin/plymouth ] && plymouth --ping; then
 				cryptkeyscript="plymouth ask-for-password --prompt"
-				cryptkey=$(printf "$cryptkey")
-			else
-				cryptkeyscript="/lib/cryptsetup/askpass"
 			fi
 		fi
 
-
 		if [ ! -e "$NEWROOT" ]; then
-			if ! crypttarget="$crypttarget" cryptsource="$cryptsource" \
-			     $cryptkeyscript "$cryptkey" | $cryptcreate --key-file=- ; then
+			if [ -n "$cryptkeyscript" ] ; then
+				mkdir -m 0600 -p /lib/cryptsetup
+				mkfifo -m 0600 /lib/cryptsetup/passfifo
+				( ( res=`crypttarget="$crypttarget" cryptsource="$cryptsource" \
+					$cryptkeyscript "$cryptkey"` ;\
+					echo -ne "${res}" > /lib/cryptsetup/passfifo ) & )
+			fi
+			if ! crypttarget="$crypttarget" cryptsource="$cryptsource"\
+				/lib/cryptsetup/askpass "$cryptkeyaskpass" | $cryptcreate --key-file=- ; then
 				message "cryptsetup: cryptsetup failed, bad password or options?"
 				continue
 			fi
EOF

ENDOFFILE
chmod +x /target/etc/initramfs-tools/hooks/cryptroot_patch

cat > /target/etc/initramfs-tools/hooks/dropbear_patch << ENDOFFILE
#!/bin/sh -e

PREREQS="dropbear"

prereqs() { echo "\$PREREQS"; }

case "\$1" in
    prereqs)
    prereqs
    exit 0
    ;;
esac

. /usr/share/initramfs-tools/hook-functions

# add the username as virtual user in the initrd to make vagrant happy
echo "$username:x:0:0:$username:/root:/bin/sh" >> "\${DESTDIR}/etc/passwd"

ENDOFFILE
chmod +x /target/etc/initramfs-tools/hooks/dropbear_patch

logger -t custom_late.sh "install dropbear and patch, copy /.ssh/authorized_keys, update-initramfs in target"
apt-install cryptsetup dropbear patch
cp /.ssh/authorized_keys /target/etc/initramfs-tools/root/.ssh/authorized_keys
in-target update-initramfs -k all -c
